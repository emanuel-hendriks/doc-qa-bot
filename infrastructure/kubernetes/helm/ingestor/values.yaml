# Default values for ingestor
replicaCount: 1

image:
  repository: doc-qa-bot/ingestor
  tag: latest
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 8000

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 256Mi

cronjob:
  enabled: true
  schedule: "0 */6 * * *"  # Every 6 hours
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1

env:
  - name: DATABASE_URL
    valueFrom:
      secretKeyRef:
        name: {{ .Release.Name }}-secrets
        key: DATABASE_URL
  - name: AWS_REGION
    value: eu-south-1
  - name: S3_BUCKET
    value: docs-raw-prod
  - name: BEDROCK_MODEL_ID
    value: amazon.titan-embed-text-v1
  - name: AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: {{ .Release.Name }}-secrets
        key: AWS_ACCESS_KEY_ID
  - name: AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: {{ .Release.Name }}-secrets
        key: AWS_SECRET_ACCESS_KEY
  - name: BEDROCK_API_KEY
    valueFrom:
      secretKeyRef:
        name: {{ .Release.Name }}-secrets
        key: BEDROCK_API_KEY
  - name: S3_BUCKET_KEY
    valueFrom:
      secretKeyRef:
        name: {{ .Release.Name }}-secrets
        key: S3_BUCKET_KEY

# Secret values (should be overridden in production)
secrets:
  awsAccessKeyId: ""
  awsSecretAccessKey: ""
  databaseUrl: "postgresql://user:pass@localhost:5432/db"
  bedrockApiKey: ""
  s3BucketKey: ""

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

podSecurityContext:
  fsGroup: 1000

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5 